//
// Created by syslot on 25/07/2019.
//

#include "../common.h"

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int visit[9];
        // row range
        for(auto row: board) {
            memset(visit, 0, sizeof(int) * 9);
            for( auto w:row){
                if(w == '.')
                    continue;
                int idx = w - '1';
                if(visit[idx])
                    return false;
                else
                    visit[idx] = 1;
            }
        }

        // col range
        for(int i=0;i<9;i++){
            memset(visit, 0, sizeof(int) *9);
            for(int j=0;j<9;j++){
                if(board[j][i] == '.')
                    continue;

                int idx = board[j][i]  - '1';
                if(visit[idx])
                    return false;
                else
                    visit[idx] = 1;
            }

        }

        // 3x3 range

        for(int c=0;c<9;c+=3)
            for(int r=0;r<9;r+=3){
                memset(visit, 0, sizeof(int) *9);

                for(int i = c; i<c+3;i++)
                    for(int j = r; j<r+3; j++){
                        if(board[i][j] == '.')
                            continue;

                        int idx = board[i][j]  - '1';
                        if(visit[idx])
                            return false;
                        else
                            visit[idx] = 1;
                    }
            }

        return true;
    }
};


int main(){

//    vector<vector<char>> board  {
//  {'5','3','.','.','7','.','.','.','.'},
//  {'6','.','.','1','9','5','.','.','.'},
//  {'.','9','8','.','.','.','.','6','.'},
//  {'8','.','.','.','6','.','.','.','3'},
//  {'4','.','.','8','.','3','.','.','1'},
//  {'7','.','.','.','2','.','.','.','6'},
//  {'.','6','.','.','.','.','2','8','.'},
//  {'.','.','.','4','1','9','.','.','5'},
//  {'.','.','.','.','8','.','.','7','9'}};


//    vector<vector<char>> board{
//            {'8', '3', '.', '.', '7', '.', '.', '.', '.'},
//            {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
//            {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
//            {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
//            {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
//            {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
//            {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
//            {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
//            {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
//    };

    vector<vector<char>> board{
        {'.','.','.','.','5','.','.','1','.'},
        {'.','4','.','3','.','.','.','.','.'},
        {'.','.','.','.','.','3','.','.','1'},
        {'8','.','.','.','.','.','.','2','.'},
        {'.','.','2','.','7','.','.','.','.'},
        {'.','1','5','.','.','.','.','.','.'},
        {'.','.','.','.','.','2','.','.','.'},
        {'.','2','.','9','.','.','.','.','.'},
        {'.','.','4','.','.','.','.','.','.'}
    };

    Solution s;
    cout << s.isValidSudoku(board)<< endl;


}